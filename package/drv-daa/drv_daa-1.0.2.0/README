drv_daa README

How to adapt to a specific board
================================

please refer to drv_daa_board_template.c for details.



How to configure
================
1) Danube example
../configure --build=i686-pc-linux --host=mips-linux --enable-warnings --disable-apoh --enable-kernelincl=/home/${USER}/linux/include --enable-duslicincl=/var/vob/comacsd/comacsd_driver/drv_duslic --enable-vineticincl=/var/vob/comacsd/comacsd_driver/drv_peb3324 --enable-tapiincl=/var/vob/comacsd/comacsd_driver/drv_tapi --prefix=/exports/${USER}_danube/opt/ifx --enable-boardname=EASY50512
--------------------------------------------------------------
for Linux 2.4 you have to add the following CFLAGS for Danube:
 --with-cflags="-fno-strict-aliasing -fno-common -fomit-frame-pointer -fno-pic -mno-abicalls -mlong-calls -mips32 -pipe -mtune=r4600 -mips2 -mlong-calls -Wa,--trap -G 0 -DMODVERSIONS"

2) EASY3332 example (lab test only as no real DAA device connected)
../configure --build=i686-pc-linux --host=powerpc-linux --enable-warnings --enable-apoh --enable-kernelincl=/home/${USER}/linux/include --enable-duslicincl=/var/vob/comacsd/comacsd_driver/drv_duslic --enable-vineticincl=/var/vob/comacsd/comacsd_driver/drv_peb3324 --enable-tapiincl=/var/vob/comacsd/comacsd_driver/drv_tapi --prefix=/exports/${USER}_easy3332_ppc/opt/ifx --enable-boardname=EASY3332
-------------------------------------------------------------------
for Linux 2.4 you have to add the following CFLAGS for MPC targets:
 --with-cflags="-fno-strict-aliasing -fno-common -fomit-frame-pointer"

2) Template example / compiles but must be adapted to work
../configure --build=i686-pc-linux --host=powerpc-linux --enable-warnings --enable-apoh --enable-kernelincl=/home/${USER}/linux/include --enable-duslicincl=/var/vob/comacsd/comacsd_driver/drv_duslic --enable-vineticincl=/var/vob/comacsd/comacsd_driver/drv_peb3324 --enable-tapiincl=/var/vob/comacsd/comacsd_driver/drv_tapi --prefix=/exports/${USER}_easy3332_ppc/opt/ifx --enable-boardname=TEMPLATE

Note: One important parameter to adapt to a specific controller platform is
      --with-clags="" - this parameter gives you the option to add platform
          specific compiler flags easily. For Linux 2.6 it's not required to pass
          specific compiler options as the kernel build process will take care
          of this.

