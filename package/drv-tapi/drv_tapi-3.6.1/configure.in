#                              Copyright (c) 2006
#                           Infineon Technologies AG
#                    Am Campeon 1-12; 81726 Munich, Germany
#
# THE DELIVERY OF THIS SOFTWARE AS WELL AS THE HEREBY GRANTED NON-EXCLUSIVE,
# WORLDWIDE LICENSE TO USE, COPY, MODIFY, DISTRIBUTE AND SUBLICENSE THIS
# SOFTWARE IS FREE OF CHARGE.
#
# THE LICENSED SOFTWARE IS PROVIDED "AS IS" AND INFINEON EXPRESSLY DISCLAIMS
# ALL REPRESENTATIONS AND WARRANTIES, WHETHER EXPRESS OR IMPLIED, INCLUDING
# WITHOUT LIMITATION, WARRANTIES OR REPRESENTATIONS OF WORKMANSHIP,
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, DURABILITY, THAT THE
# OPERATING OF THE LICENSED SOFTWARE WILL BE ERROR FREE OR FREE OF ANY THIRD
# PARTY CLAIMS, INCLUDING WITHOUT LIMITATION CLAIMS OF THIRD PARTY INTELLECTUAL
# PROPERTY INFRINGEMENT.
#
# EXCEPT FOR ANY LIABILITY DUE TO WILFUL ACTS OR GROSS NEGLIGENCE AND EXCEPT
# FOR ANY PERSONAL INJURY INFINEON SHALL IN NO EVENT BE LIABLE FOR ANY CLAIM
# OR DAMAGES OF ANY KIND, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.


AC_REVISION($Revision: 1.9 $)

AC_INIT([TAPI 3.x - The Common Voice API], [3.6.1], [Infineon Technologies AG], [drv_tapi])
AC_CONFIG_SRCDIR(src/drv_tapi.h)
AM_INIT_AUTOMAKE

# save the configure arguments
CONFIGURE_OPTIONS="$ac_configure_args"
AC_SUBST(CONFIGURE_OPTIONS)

AC_CONFIG_HEADER(drv_config.h)

#if [ $CFLAGS == "" ] ; then
#   CFLAGS="-O2"
#fi

AC_PROG_CC

AH_TOP(
[/******************************************************************************

                               Copyright (c) 2006
                            Infineon Technologies AG
                     Am Campeon 1-12; 81726 Munich, Germany

  THE DELIVERY OF THIS SOFTWARE AS WELL AS THE HEREBY GRANTED NON-EXCLUSIVE,
  WORLDWIDE LICENSE TO USE, COPY, MODIFY, DISTRIBUTE AND SUBLICENSE THIS
  SOFTWARE IS FREE OF CHARGE.

  THE LICENSED SOFTWARE IS PROVIDED "AS IS" AND INFINEON EXPRESSLY DISCLAIMS
  ALL REPRESENTATIONS AND WARRANTIES, WHETHER EXPRESS OR IMPLIED, INCLUDING
  WITHOUT LIMITATION, WARRANTIES OR REPRESENTATIONS OF WORKMANSHIP,
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, DURABILITY, THAT THE
  OPERATING OF THE LICENSED SOFTWARE WILL BE ERROR FREE OR FREE OF ANY THIRD
  PARTY CLAIMS, INCLUDING WITHOUT LIMITATION CLAIMS OF THIRD PARTY INTELLECTUAL
  PROPERTY INFRINGEMENT.

  EXCEPT FOR ANY LIABILITY DUE TO WILFUL ACTS OR GROSS NEGLIGENCE AND EXCEPT
  FOR ANY PERSONAL INJURY INFINEON SHALL IN NO EVENT BE LIABLE FOR ANY CLAIM
  OR DAMAGES OF ANY KIND, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  DEALINGS IN THE SOFTWARE.

 ******************************************************************************/
#ifndef _DRV_CONFIG_H_
#define _DRV_CONFIG_H_]
)

AH_BOTTOM([
#endif /* _DRV_CONFIG_H_ */
])

AC_DEFINE_UNQUOTED([DRV_TAPI_CONFIGURE_STR], ["$ac_configure_args"], [configure options string])

dnl enable linux kernel 2.6.x support (Make sure AC_PROG_CC is defined before to set $CC!)
AM_CONDITIONAL(KERNEL_2_6, false)
AC_ARG_ENABLE(linux-26,
        AS_HELP_STRING(--enable-linux-26,Enable support for linux kernel 2.6.x),
        [
                AM_CONDITIONAL(KERNEL_2_6, true)
                if test -z "$ARCH" ; then
                        [ARCH=`$CC -dumpmachine | sed -e s'/-.*//' \
                                -e 's/i[3-9]86/i386/' \
                                -e 's/mipsel/mips/' \
                                -e 's/powerpc/ppc/' \
                                -e 's/sh[234]/sh/' \
                        `]
                fi
                if test -n "$ARCH" ; then
                        echo "Set the kernel architecture to $ARCH"
                        AC_SUBST([KERNEL_ARCH],[$ARCH])
                else
                        AC_MSG_ERROR([Kernel architecture not set!])
                fi
                if test "`echo $0|cut -c1`" = "/" ; then
                        AC_MSG_ERROR([Due to a kbuild problem, please call configure with a relative path.])
                fi
                AC_DEFINE([LINUX_2_6],[1],[enable linux 2.6 code])
        ]
)

dnl Set kernel include path
AC_ARG_ENABLE(kernelincl,
        AS_HELP_STRING(--enable-kernelincl=x,Set the target kernel include path),
        [
                if test -e $enableval/linux/kernel.h; then
                        AC_SUBST([KERNEL_INCL_PATH],[$enableval])
                else
                        AC_MSG_ERROR([The kernel include directory is not valid!])
                fi
        ]
)

dnl Set kernel build path
AC_ARG_ENABLE(kernelbuild,
        AS_HELP_STRING(--enable-kernelbuild=x,Set the target kernel build path),
        [
                if test -e $enableval/include/linux/autoconf.h; then
                        AC_SUBST([KERNEL_BUILD_PATH],[$enableval])
                else
                        AC_MSG_ERROR([The kernel build directory is not valid or not configured!])
                fi
        ],
        [
                if test -z $KERNEL_BUILD_PATH; then
                        # assume kernel was build in source dir...
                        AC_SUBST([KERNEL_BUILD_PATH],[$KERNEL_INCL_PATH/..])
                fi
        ]
)

dnl enable compiler warnings
AM_CONDITIONAL(WARNINGS, false)
AC_ARG_ENABLE(warnings,
    AC_HELP_STRING(
        [--enable-warnings],
        [enable compiler warnings (GCC only)]
    ),
    [
        AM_CONDITIONAL(WARNINGS, true)
    ]
)

dnl enable warnings as error
AC_ARG_ENABLE(werror,
    AC_HELP_STRING(
        [--enable-werror],
        [enable warnings as error]
    ),
    [
        if test $enableval = 'yes'; then
            AM_CONDITIONAL(WERROR, true)
            CFLAGS="$CFLAGS -Werror"
        else
            AM_CONDITIONAL(WERROR, false)
        fi
    ],
    [
        AM_CONDITIONAL(WERROR, false)
    ]
)

dnl Enable debugging mode
AC_ARG_ENABLE(debug,
      [  --enable-debug          Enable debug messages],
      CFLAGS="-O1 -g3")
#     CFLAGS="$CFLAGS -DDEBUG_PRINT -O1 -g3")

dnl Set project base directory path
DEFAULT_PRJ_BASE_PATH=''
AC_ARG_ENABLE(prjbase,
   AC_HELP_STRING(
      [--enable-prjbase=x],
      [Set the project base directory path (default is ~/project)]
   ),
   [
    if test -n $enableval; then
       echo Set the project base directory path $enableval
       DEFAULT_PRJ_BASE_PATH=$enableval
       AC_SUBST([PRJ_BASE_PATH],[$DEFAULT_PRJ_BASE_PATH])
    else
       echo Set the default project base directory path $DEFAULT_PRJ_BASE_PATH
       AC_SUBST([PRJ_BASE_PATH],[$DEFAULT_PRJ_BASE_PATH])
    fi
   ],
   [AC_SUBST([PRJ_BASE_PATH],[$DEFAULT_PRJ_BASE_PATH])]
)

dnl enable obsolete lec activation
AC_ARG_ENABLE(obsolete-lec-activation,
    AC_HELP_STRING(
        [--enable-obsolete-lec-activation],
        [enable obsolete lec activation]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([ENABLE_OBSOLETE_LEC_ACTIVATION],[1],[enable obsolete lec activation])
            AM_CONDITIONAL(ENABLE_OBSOLETE_LEC_ACTIVATION, true)
                        AC_MSG_RESULT(enable obsolete lec activation)
        else
            AM_CONDITIONAL(ENABLE_OBSOLETE_LEC_ACTIVATION, false)
        fi
    ],
    [
        AM_CONDITIONAL(ENABLE_OBSOLETE_LEC_ACTIVATION, false)
    ]
)

dnl enable obsolete bitfield event interface
AC_ARG_ENABLE(obsolete-bitfield-event-interface,
    AC_HELP_STRING(
        [--enable-obsolete-bitfield-event-interface],
        [enable old style bitfield event interface]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([ENABLE_OBSOLETE_BITFIELD_EVENT_INTERFACE],[1],[enable obsolete bitfield event interface])
            AM_CONDITIONAL(ENABLE_OBSOLETE_BITFIELD_EVENT_INTERFACE, true)
            AC_MSG_RESULT(enable obsolete bitfield event interface - WARNING no support available)
        else
            AM_CONDITIONAL(ENABLE_OBSOLETE_BITFIELD_EVENT_INTERFACE, false)
        fi
    ],
    [
        AM_CONDITIONAL(ENABLE_OBSOLETE_BITFIELD_EVENT_INTERFACE, false)
    ]
)

dnl enable TAPI linetesting features
AC_ARG_ENABLE(lt,
   AC_HELP_STRING(
      [--enable-lt],
      [enable line testing services including GR909]
   ),
   [
      if test $enableval = 'yes'; then
         AC_DEFINE([TAPI],[1],[enable TAPI Interface])
	 AC_MSG_RESULT(enable TAPI line testing services)
         AC_DEFINE([TAPI_LT],[1],[enable line testing])
         AC_DEFINE([TAPI_GR909],[1],[enable TAPI GR909 tests])
      else
	      AC_MSG_RESULT(disable line testing services)
      fi
   ]
)
dnl enable TAPI Voice support
AC_ARG_ENABLE(voice,
    AC_HELP_STRING(
        [--enable-voice],
        [enable Voice support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([TAPI],[1],[enable TAPI interface])
            AC_MSG_RESULT(enable TAPI Voice support)
            AC_DEFINE([TAPI_VOICE],[1],[enable Voice support])
        else
            AC_MSG_RESULT(disable Voice support)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([enable TAPI Voice support (default), disable with --disable-voice])
        AC_DEFINE([TAPI],[1],[enable TAPI interface])
        AC_DEFINE([TAPI_VOICE],[1],[enable Voice support])
    ]
)


dnl enable TAPI DTMF support
AC_ARG_ENABLE(dtmf,
    AC_HELP_STRING(
        [--enable-dtmf],
        [enable TAPI DTMF support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([TAPI],[1],[enable TAPI interface])
            AC_MSG_RESULT(enable TAPI DTMF support)
            AC_DEFINE([TAPI_DTMF],[1],[enable TAPI DTMF support])
        else
            AC_MSG_RESULT(disable TAPI DTMF support)
        fi
    ],
    [
        dnl enable automatically:
        AC_MSG_RESULT([enable TAPI DTMF support (default), disable with --disable-dtmf])
        AC_DEFINE([TAPI],[1],[enable TAPI Interface])
        AC_DEFINE([TAPI_DTMF],[1],[enable TAPI DTMF support])
    ]
)

dnl enable TAPI CID support
AC_ARG_ENABLE(cid,
    AC_HELP_STRING(
        [--enable-cid],
        [enable TAPI CID support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([TAPI],[1],[enable TAPI Interface])
            AC_MSG_RESULT(enable TAPI CID support.)
            AC_DEFINE([TAPI_CID],[1],[enable TAPI CID support])
        else
            AC_MSG_RESULT(disable TAPI CID support.)
        fi
    ],
    [
        dnl enable automatically:
        AC_MSG_RESULT([enable TAPI CID support (default), disable with --disable-cid])
        AC_DEFINE([TAPI],[1],[enable TAPI Interface])
        AC_DEFINE([TAPI_CID],[1],[enable TAPI CID support])
    ]
)

dnl enable TAPI FAX support
AC_ARG_ENABLE(fax,
    AC_HELP_STRING(
        [--enable-fax],
        [enable TAPI T.38 FAX support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_DEFINE([TAPI],[1],[enable TAPI Interface])
            AC_MSG_RESULT(enable TAPI FAX support)
            AC_DEFINE([TAPI_FAX_T38],[1],[enable TAPI FAX support])
        else
            AC_MSG_RESULT(disable TAPI FAX support)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([enable TAPI FAX support (default), disable with --disable-fax])
        AC_DEFINE([TAPI],[1],[enable TAPI Interface])
        AC_DEFINE([TAPI_FAX_T38],[1],[enable TAPI FAX support])
    ]
)

AC_ARG_ENABLE(module,
    AC_HELP_STRING(
        [--enable-module],
        [enable LINUX MODULE support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(enable LINUX MODULE support)
            AC_DEFINE([USE_MODULE],[1],[enable LINUX MODULE support])
            AM_CONDITIONAL(USE_MODULE, true)
        else
            AC_MSG_RESULT(disable LINUX MODULE support)
            AM_CONDITIONAL(USE_MODULE, false)
        fi
    ],
    [
        dnl Enable automatically:
        AC_MSG_RESULT([enable LINUX MODULE support (default), disable with --disable-module])
        AC_DEFINE([USE_MODULE],[1],[enable LINUX MODULE support])
        AM_CONDITIONAL(USE_MODULE, true)
    ]
)

dnl enable TAPI EXT KEYPAD support (INCA-IP2 only)
AC_ARG_ENABLE(extkeypad,
    AC_HELP_STRING(
        [--enable-extkeypad],
        [enable TAPI EXT KEYPAD support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(enable TAPI EXT KEYPAD support)
            AC_DEFINE([TAPI_EXT_KEYPAD],[1],[enable TAPI EXT KEYPAD support (INCA-IP2 only)])
        else
            AC_MSG_RESULT(disable TAPI EXT KEYPAD support)
        fi
    ],
    [
        dnl disable automatically:
        AC_MSG_RESULT([disable TAPI EXT KEYPAD support (INCA-IP2 only), enable with --enable-extkeypad])
    ]
)

dnl enable TAPI AUDIO CHANNEL support (INCA-IP2 only)
AC_ARG_ENABLE(audioch,
    AC_HELP_STRING(
        [--enable-audioch],
        [enable TAPI AUDIO CHANNEL support]
    ),
    [
        if test $enableval = 'yes'; then
            AC_MSG_RESULT(enable TAPI AUDIO CHANNEL support)
            AC_DEFINE([TAPI_AUDIO_CHANNEL],[1],[enable TAPI AUDIO CHANNEL support (INCA-IP2 only)])
        else
            AC_MSG_RESULT(disable TAPI AUDIO CHANNEL support)
        fi
    ],
    [
        dnl disable automatically:
        AC_MSG_RESULT([disable TAPI AUDIO CHANNEL support (INCA-IP2 only), enable with --enable-audioch])
    ]
)

AM_CONDITIONAL(EVENT_LOGGER_DEBUG, false)
dnl enable event logger debugging
AC_ARG_ENABLE(el_debug,
    AC_HELP_STRING(
      [--enable-el_debug],
      [enable event logger debugging (requires additional eventlogger package)]
   ),
   [
      if test $enableval = 'yes'; then
         AC_MSG_RESULT([enabled event logger debugging])
         AC_DEFINE([EVENT_LOGGER_DEBUG],[1],[enabled event logger debugging])
         AM_CONDITIONAL(EVENT_LOGGER_DEBUG, true)
      else
         AC_MSG_RESULT([disabled event logger debugging])
         AM_CONDITIONAL(EVENT_LOGGER_DEBUG, false)
      fi
   ],
   [
      AM_CONDITIONAL(EVENT_LOGGER_DEBUG, false)
   ]
)

dnl enable QoS Mode
AM_CONDITIONAL(UDP_REDIRECT, false)
AC_ARG_ENABLE(udp-redirect,
   AC_HELP_STRING(
      [--enable-udp-redirect],
      [enable QoS - quality of service and UDP redirection]
      ),
   [
      if test $enableval = 'yes'; then
         AC_MSG_RESULT([enable QoS and UDP redirect])
         CFLAGS="$CFLAGS -DQOS_SUPPORT"
         AM_CONDITIONAL(UDP_REDIRECT, true)
      else
         AC_MSG_RESULT([disable QoS and UDP redirect])
         AM_CONDITIONAL(UDP_REDIRECT, false)
      fi
   ],
   [
      AC_MSG_RESULT([disable QoS and UDP redirect (default)])
      AM_CONDITIONAL(UDP_REDIRECT, false)
   ]
)

dnl enable Kernel Packet Interface (KPI)
AM_CONDITIONAL(KPI_SUPPORT, false)
AC_ARG_ENABLE(kpi,
   AC_HELP_STRING(
      [--enable-kpi],
      [enable Kernel Packet Interface (KPI)]
      ),
   [
      if test $enableval = 'yes'; then
         AC_MSG_RESULT([enable Kernel Packet Interface])
         CFLAGS="$CFLAGS -DKPI_SUPPORT"
         AM_CONDITIONAL(KPI_SUPPORT, true)
      else
         AC_MSG_RESULT([disable Kernale Packet Interface])
         AM_CONDITIONAL(KPI_SUPPORT, false)
      fi
   ],
   [
      AC_MSG_RESULT([disable Kernel Packet Interface (default), enable with --enable-kpi])
      AM_CONDITIONAL(KPI_SUPPORT, false)
   ]
)

dnl enable DECT channel support
AM_CONDITIONAL(DECT_SUPPORT, false)
AC_ARG_ENABLE(dect,
   AC_HELP_STRING(
      [--enable-dect],
      [enable DECT channel support]
      ),
   [
      if test $enableval = 'yes'; then
         AC_MSG_RESULT([enable DECT channel support])
         CFLAGS="$CFLAGS -DDECT_SUPPORT"
         AM_CONDITIONAL(DECT_SUPPORT, true)
      else
         AC_MSG_RESULT([disable DECT channel support])
         AM_CONDITIONAL(DECT_SUPPORT, false)
      fi
   ],
   [
      AC_MSG_RESULT([disable DECT channel support (default), enable with --enable-dect])
      AM_CONDITIONAL(DECT_SUPPORT, false)
   ]
)

dnl enable read/write packet interface
AM_CONDITIONAL(PACKET_SUPPORT, false)
AC_ARG_ENABLE(packet,
   AC_HELP_STRING(
      [--enable-packet],
      [enable read/write packet interface (default)]
      ),
   [
      if test $enableval = 'yes'; then
         AM_CONDITIONAL(PACKET_SUPPORT, true)
         AC_DEFINE([TAPI_PACKET],[1],[enabled read/write packet interface])
      else
         AC_MSG_RESULT([disable read/write packet interface])
         AM_CONDITIONAL(PACKET_SUPPORT, false)
      fi
   ],
   [
      AC_DEFINE([TAPI_PACKET],[1],[enabled read/write packet interface])
      AM_CONDITIONAL(PACKET_SUPPORT, true)
   ]
)


dnl enable runtime traces
AC_ARG_ENABLE(trace,
   AC_HELP_STRING(
      [--enable-trace],
      [enable runtime traces]
   ),
   [
      if test $enableval = 'yes'; then
	    AC_MSG_RESULT(enable runtime traces)
        AC_DEFINE([ENABLE_TRACE],[1],[enable trace outputs in general])
        AC_DEFINE([ENABLE_LOG],[1],[enable log (errors) outputs in general])
        AC_DEFINE([RUNTIME_TRACE],[1],[enable runtime traces as register access])
      else
         AC_MSG_RESULT(disable runtime traces)
      fi
    ]
)

dnl set additional (device specific) CFLAGS
AC_ARG_WITH(cflags,
    AC_HELP_STRING(
        [--with-cflags=val],
        [pass additional (device specific) CFLAGS, not required for Linux 2.6]
    ),
    [
	    if test "$withval" = yes; then
		    AC_MSG_ERROR([Please provide a value for the maximum devices]);
	    fi
	    AC_MSG_RESULT([passing additional CFLAGS $withval])
        CFLAGS="$CFLAGS $withval"
    ]
)

AC_DEFINE_UNQUOTED([WITH_CLFAGS_CONFIGURE_OPTION],[$CFLAGS],[environment and device specific CFLAGS passed to configure])



AC_CONFIG_COMMANDS_PRE([])

## Target host specific compilation flags
#case "${host}" in
#   mips_fp_be)
#      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer \
#         -G 0 -mno-abicalls -fno-pic -pipe -mtune=r4600 -mips2 -Wa,--trap \
#         -DMODVERSIONS"
#      ;;
#   mips-linux)
#      CFLAGS="$CFLAGS -fno-pic -mno-abicalls -mlong-calls -mips32 -G 0 -DMODVERSIONS"
#      ;;
#   mipsel-linux)
#      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer \
#         -mno-abicalls -fno-pic -pipe -mips2 -Wa,--trap  -Wa,--trap \
#         -D__linux__ -D_MIPS_ISA=6 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32 \
#         -D_MIPS_SZINT=32 -D__MIPSEL__ -DUTS_MACHINE='"mips"' -mlong-calls"
#      ;;
#   powerpc-linux-uclibc)
#      CFLAGS="$CFLAGS -fno-strict-aliasing -fno-common -fomit-frame-pointer"
#      ;;
#   *)
#      ;;
#esac


AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([src/Makefile])

AC_OUTPUT

echo \
"------------------------------------------------------------------------
Configuration:

  Source code location: ${srcdir}
  Compiler:             ${CC}
  Compiler flags:       ${CFLAGS}
  Host System Type:     ${host}
  Install path:         ${prefix}
Settings:
  KERNEL_INCL_PATH:     ${KERNEL_INCL_PATH}
------------------------------------------------------------------------"

