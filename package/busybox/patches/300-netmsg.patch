diff -Nur busybox-1.1.1/include/applets.h busybox-1.1.1-owrt/include/applets.h
--- busybox-1.1.1/include/applets.h	2006-04-01 18:26:21.000000000 +0200
+++ busybox-1.1.1-owrt/include/applets.h	2006-04-01 18:36:28.000000000 +0200
@@ -197,6 +197,7 @@
 USE_MV(APPLET(mv, mv_main, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_NAMEIF(APPLET(nameif, nameif_main, _BB_DIR_SBIN, _BB_SUID_NEVER))
 USE_NC(APPLET(nc, nc_main, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
+USE_NETMSG(APPLET_NOUSAGE(netmsg, netmsg_main, _BB_DIR_BIN, _BB_SUID_ALWAYS))
 USE_NETSTAT(APPLET(netstat, netstat_main, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_NICE(APPLET(nice, nice_main, _BB_DIR_BIN, _BB_SUID_NEVER))
 USE_NOHUP(APPLET(nohup, nohup_main, _BB_DIR_USR_BIN, _BB_SUID_NEVER))
diff -Nur busybox-1.1.1/networking/Config.in busybox-1.1.1-owrt/networking/Config.in
--- busybox-1.1.1/networking/Config.in	2006-03-22 22:16:19.000000000 +0100
+++ busybox-1.1.1-owrt/networking/Config.in	2006-04-01 18:35:32.000000000 +0200
@@ -451,6 +451,12 @@
 	help
 	  A simple Unix utility which reads and writes data across network
 	  connections.
+	  
+config CONFIG_NETMSG
+	bool "netmsg"
+	default n
+	help
+	  simple program for sending udp broadcast messages
 
 config CONFIG_NC_GAPING_SECURITY_HOLE
 	bool "gaping security hole"
diff -Nur busybox-1.1.1/networking/Makefile.in busybox-1.1.1-owrt/networking/Makefile.in
--- busybox-1.1.1/networking/Makefile.in	2006-03-22 22:16:19.000000000 +0100
+++ busybox-1.1.1-owrt/networking/Makefile.in	2006-04-01 18:35:32.000000000 +0200
@@ -30,6 +30,7 @@
 NETWORKING-$(CONFIG_IPTUNNEL)     += iptunnel.o
 NETWORKING-$(CONFIG_NAMEIF)       += nameif.o
 NETWORKING-$(CONFIG_NC)           += nc.o
+NETWORKING-$(CONFIG_NETMSG)       += netmsg.o
 NETWORKING-$(CONFIG_NETSTAT)      += netstat.o
 NETWORKING-$(CONFIG_NSLOOKUP)     += nslookup.o
 NETWORKING-$(CONFIG_PING)         += ping.o
diff -Nur busybox-1.1.1/networking/netmsg.c busybox-1.1.1-owrt/networking/netmsg.c
--- busybox-1.1.1/networking/netmsg.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.1.1-owrt/networking/netmsg.c	2006-04-01 18:35:32.000000000 +0200
@@ -0,0 +1,58 @@
+#include <sys/types.h>
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <netdb.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include "busybox.h"
+
+
+#ifndef CONFIG_NETMSG
+int main(int argc, char **argv)
+#else
+int netmsg_main(int argc, char **argv)
+#endif
+{
+	int s, i;
+	struct sockaddr_in addr;
+	int optval = 1;
+	unsigned char buf[1001];
+
+	if (argc != 3) {
+		fprintf(stderr, "usage: %s <ip> \"<message>\"\n", argv[0]);
+		exit(1);
+	}
+
+	if ((s = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
+		perror("Opening socket");
+		exit(1);
+	}
+
+	memset(&addr, 0, sizeof(addr));
+	addr.sin_family = AF_INET;
+	addr.sin_addr.s_addr = inet_addr(argv[1]);
+	addr.sin_port = htons(0x1337);
+
+	memset(buf, 0, 1001);
+	buf[0] = 0xde;
+	buf[1] = 0xad;
+
+	strncpy(buf + 2, argv[2], 998);
+
+	if (setsockopt (s, SOL_SOCKET, SO_BROADCAST, (caddr_t) &optval, sizeof (optval)) < 0) {
+		perror("setsockopt()");
+		goto fail;
+	}
+
+	if (sendto(s, buf, 1001, 0, (struct sockaddr *) &addr, sizeof(addr)) < 0) {
+		perror("sendto()");
+		goto fail;
+	}
+
+	return 0;
+	
+fail:
+	close(s);
+	exit(1);
+}
