MS-17E8P Register Description V.1.1
8-channel PoE Module
Simple Serial Port Controller for for MS-17E8P microcontroller ATmega88A

!No FIFO (no RAM in FPGA)
!Fixed settings: 9600 8N1

Vendor ID: 0055
Device ID: 0093

0x00..0x07 - PoE I2C Controller Registers (8 bytes):

0x00 CRA - Control Register A
Bit 0 (0x01) - TXEN - Transmitter Enable
Bit 1 (0x02) - RXEN - Receiver Enable
Bit 4 (0x10) - LEDM - Mode for Orange LEDs (0 - Eth Speed, 1 - PoE Status)
Bit 7 (0x80) - ERST - Reset to Ethernet PHY (0 - Reset, 1 - Normal operation)

0x01 SR - Status Register (Set by hardware, Write 1 to clear bit)
0x02 IMR - Interrupt Mask Register (1 - Enable interrupt, 0 - Disable)
Bit 0 (0x01) - TXS - Transmit Success
Bit 1 (0x02) - RXS - Receive Success
Bit 2 (0x04) - RXE - Receive Error
Bit 3 (0x08) - PSU - PoE Status Updated

0x03 - Reserved, reads as 0x00

0x04 - PSR - PoE Status Register (Read-Only, updated by hardware when PoE status changed)
When PSR is updated, status bit SR.PSU is set.
PSR drives Orange LEDs if LEDM=1

Bit 0 (0x01) - PoE Channel 7 Status
...
Bit 7 (0x80) - PoE Channel 0 Status
0 - Power is Off
1 - Power is On


0x05 - Reserved, reads as 0x00

0x06 - TDR - Transmitted Data (Write before starting thansmission)
Bits 7..0 - Byte to transmit

0x07 - RDR - Received Data (Read-Only, Updated by hardware when a byte received)
Bits 7..0 - Received byte

Serial Port Controller Usage

To Transmit a Byte:
1. Ensure that TX buffer is empty (CRA.TXEN is cleared).
2. Write byte to TDR.
3. Set CRA.TXEN to start transmission.
4. When transmission has done, bit CRA.TXEN is cleared and bit SR.TXS is set.
5. Clear SR.TXS

To Receive a Byte:
1. Enable receiver by setting CRA.RXEN (once at initialization).
2. When reception has done, bit SR.RXS (or SR.RXE) is set.
3. Read byte from RDR.
4. Clear SR.RXS (or SR.RXE).

