#!/bin/sh

die(){
    echo "Error: $*" >&2
    exit 1;
}

show_header(){
    template="$1"
    echo "######################################################################################"
    echo "#  "
    echo "#  This file automatically generated by $template at $(date '+%Y%m%d %H:%M:%S')"
    echo "#  Do not edit it by hands, please use webface, kdb or edit $template"
    echo "#  "
    echo "######################################################################################"
}

is_number(){
    numb=$1
    if echo $numb | egrep "^[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

is_ipaddress(){
    ip=$1
    if echo $ip | egrep "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

is_netmask(){
    ip=$1
    if echo $ip | egrep "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

cfg_make(){
	tmpl="$1"
	file="$2"
	shift
	shift
	args="$@"
	
	[ -z "$tmpl" ] && die "Usage: $0 <template name> <file>"
	[ -z "$file" ] && die "Usage: $0 <template name> <file>"
	[ ! -r "/etc/templates/$tmpl" ] && die "Cannot read /etc/templates/$tmpl"

	tmp="/tmp/$$/$file"
	tmpe=/tmp/${tmpl}.err
	mkdir -p "`dirname $tmp`"

	sh /etc/templates/$tmpl $args >$tmp 2>$tmpe
	if [ "$?" = 0 ]; then
		return 0
	else
		ERROR_MESSAGE="Creating config file $file failed"
		ERROR_DETAIL="`cat $tmpe`"
		return 1
	fi
}

cfg_commit(){
	cp -a /tmp/$$/* /
	rm -rf /tmp/$$ /tmp/*.err
}

update_configs(){
	local subsys="$1"
	
	case "$subsys" in
	network)
		cfg_make interfaces /etc/network/interfaces && \
		cfg_make hostname /etc/hostname && \
		cfg_commit
	;;
	time)
		cfg_make TZ /etc/TZ && \
		cfg_commit
		;;
	dhcp)
		cfg_make dhcpd.conf /etc/dhcpd/dhcpd.conf && \
		cfg_commit
		;;
	dns)
		cfg_make dnsmasq.conf /etc/dnsmasq.conf && \
		cfg_make resolv.conf /etc/resolv.conf && \
		cfg_commit
		;;
	dns_server)
		ok="true"
		for k in `kdb  kls svc_dns_zonelist `; do 
			zonedata=`kdb  get $k`; 
			eval "export $zonedata"; 
			if [ "x${enabled}x" != "xx" ]; then
				cfg_make dns_zone /etc/bind/zones/$zoneid $k $zoneid || ok="false"
			fi
		done
		cfg_make named.conf /etc/bind/named.conf || ok="false"
		[ "$ok" = "true" ] && cfg_commit
		;;
	dsl*)
		iface=${sybsys##*.}
		cfg_make dsl-interfaces "/etc/dsl/${iface}" $iface && \
		cfg_commit
		;;
	esac
		
}

ip2int () (
  set $(echo $1 | tr '\.' ' ')
  echo $(($1<<24|$2<<16|$3<<8|$4))
)

int2ip () {
  echo $(($1>>24&255)).$(($1>>16&255)).$(($1>>8&255)).$(($1&255))
}



