#!/bin/sh

die(){
    echo "Error: $*" >&2
    exit 1;
}

show_header(){
    template="$1"
    echo "######################################################################################"
    echo "#  "
    echo "#  This file automatically generated by $template at $(date '+%Y%m%d %H:%M:%S')"
    echo "#  Do not edit it by hands, please use webface, kdb or edit $template"
    echo "#  "
    echo "######################################################################################"
}

is_number(){
    numb=$1
    if echo $numb | egrep "^[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

is_ipaddress(){
    ip=$1
    if echo $ip | egrep "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

is_netmask(){
    ip=$1
    if echo $ip | egrep "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$" >/dev/null 2>/dev/null; then
        return 0;   # true
    else
        return 1;   # false
    fi
}

cfg_make(){
	tmpl="$1"
	file="$2"
	shift
	shift
	args="$@"
	
	[ -z "$tmpl" ] && die "Usage: $0 <template name> <file>"
	[ -z "$file" ] && die "Usage: $0 <template name> <file>"
	[ ! -r "/etc/templates/$tmpl" ] && die "Cannot read /etc/templates/$tmpl"

	tmp="/tmp/$$/$file"
	tmpe=/tmp/${tmpl}.err
	mkdir -p "`dirname $tmp`"

	sh /etc/templates/$tmpl $args >$tmp 2>$tmpe
	if [ "$?" = 0 ]; then
		return 0
	else
		ERROR_MESSAGE="Creating config file $file failed"
		ERROR_DETAIL="`cat $tmpe`"
		return 1
	fi
}

cfg_commit(){
	cp -a /tmp/$$/* /
	rm -rf /tmp/$$ /tmp/*.err
}

update_configs(){
	local subsys="$1"
	
	case "$subsys" in
	dialin)
		cfg_make inittab /etc/inittab
		cfg_make mgetty.config /etc/mgetty\+sendfax/mgetty.config
		cfg_make login.config /etc/mgetty\+sendfax/login.config
		rm /etc/ppp/pap-secrets
		rm /etc/ppp/chap-secrets
		secrets=`kdb get sys_dialin_secrets`
		cfg_make options /etc/ppp/options
		cfg_make secrets /etc/ppp/$secrets-secrets
		cfg_commit
			get_dialin_ifaces
			for i in $dialin_ifaces; do
				rm /etc/ppp/options.$i
				echo "`kdb get sys_dialin_${i}_s_ip`:`kdb get sys_dialin_${i}_c_ip`" >> /etc/ppp/options.$i
			done
		chmod 0600 /etc/mgetty\+sendfax/login.config
		kill -HUP 1
		get_serial_ifaces
		for i in $serial_ifaces; do
			id=`ps -ax | grep mgetty | grep $i | awk '{print $1}'`
			if  [ "$id" != "" ]; then
				kill $id
			fi
		done
	;;
	hostname)
		cfg_make hostname /etc/hostname && \
		cfg_commit
		hostname -F /etc/hostname
	;;
	time)
		cfg_make TZ /etc/TZ && \
		cfg_commit
		;;
	dhcp)
		#cfg_make dhcpd.conf /etc/dhcpd/dhcpd.conf && \
		if [ -z "$iface" ]; then
			for iface in `kdb sskls sys_iface_*valid=1 sys_iface_ _valid `; do 
				[ "`kdb get sys_iface_${iface}_dhcp_enabled`" = 1 ] && \
					cfg_make udhcpd.conf /etc/udhcpd.${iface}.conf && \
					cfg_commit
			done
		else
			cfg_make udhcpd.conf /etc/udhcpd.${iface}.conf && \
			cfg_commit
		fi
		;;
	dns)
		cfg_make dnsmasq.conf /etc/dnsmasq.conf && \
		cfg_make resolv.conf /etc/resolv.conf && \
		cfg_commit
		;;
	auth_ppp)
		for ppp_auth_mode in pap chap; do 
			export ppp_auth_mode;
			cfg_make ppp-secrets /etc/ppp/$ppp_auth_mode-secrets && \
			cfg_commit
		done
		;;
	pptp)
		cfg_make pptp.conf /etc/pptpd.conf && \
		cfg_commit
		;;
	dns_server)
		ok="true"
		[ -d /etc/bind/zones ] && rm -rf /etc/bind/zones
		mkdir -p /etc/bind/zones
		for k in `kdb kls svc_dns_zonelist* `; do 
			unset zone enabled zoneid nameserver admin serial refresh ttl retry expire zonetype
			zonedata=`kdb get $k`; 
			eval "$zonedata"; 
			if [ "x${enabled}x" != "xx" ]; then
				cfg_make dns_zone /etc/bind/zones/$zoneid $k $zoneid || ok="false"
			fi
		done
		cfg_make named.conf /etc/bind/named.conf || ok="false"
		[ "$ok" = "true" ] && cfg_commit
		;;
	voip)
		# generate all configs for VoIP
		cfg_make svd-main.conf /etc/svd/main.conf && \
		cfg_make svd-routet.conf /etc/svd/routet.conf && \
		cfg_make svd-vf.conf /etc/svd/voicef.conf && \
		cfg_make svd-hotline.conf /etc/svd/hotline.conf && \
		cfg_make svd-addressb.conf /etc/svd/addressb.conf && \
		cfg_make svd-rtp.conf /etc/svd/rtp.conf && \
		cfg_make svd-codecs.conf /etc/svd/codecs.conf && \
        cfg_make svd-wlec.conf /etc/svd/wlec.conf && \
        cfg_make svd-fxo.conf /etc/svd/fxo.conf && \
        cfg_make svd-vf_settings.conf /etc/svd/hw.conf && \
		cfg_commit
		;;
	svd-main)
		cfg_make svd-main.conf /etc/svd/main.conf && \
		cfg_commit
		;;
	svd-routet)
		cfg_make svd-routet.conf /etc/svd/routet.conf && \
		cfg_commit
		;;
	svd-vf)
		cfg_make svd-vf.conf /etc/svd/voicef.conf && \
		cfg_commit
		;;
	svd-hotline)
		cfg_make svd-hotline.conf /etc/svd/hotline.conf && \
		cfg_commit
		;;
	svd-addressb)
		cfg_make svd-addressb.conf /etc/svd/addressb.conf && \
		cfg_commit
		;;
	svd-rtp)
		cfg_make svd-rtp.conf /etc/svd/rtp.conf && \
		cfg_commit
		;;
	svd-codecs)
		cfg_make svd-codecs.conf /etc/svd/codecs.conf && \
		cfg_commit
		;;
    svd-wlec)
		cfg_make svd-wlec.conf /etc/svd/wlec.conf && \
		cfg_commit
		;;
    svd-fxo)
		cfg_make svd-fxo.conf /etc/svd/fxo.conf && \
		cfg_commit
		;;
    svd-vf_settings)
		cfg_make svd-vf_settings.conf /etc/svd/hw.conf && \
		cfg_commit
        ;;
	linkdeps)
		cfg_make link.map /etc/linkdeps/link.map && \
		cfg_commit
		;;
	esac
}

ip2int() (
  set $(echo $1 | tr '\.' ' ')
  echo $(($1<<24|$2<<16|$3<<8|$4))
)

int2ip () {
  echo $(($1>>24&255)).$(($1>>16&255)).$(($1>>8&255)).$(($1&255))
}
get_serial_ifaces() {
	serial_ifaces=""
	eval `kdb sls -q sys_pcitbl_`
	for s in $slots; do
		unset type num ifaces
		eval "type=\$s${s}_iftype"
		eval "num=\$s${s}_ifnum"
		eval "ifaces=\$s${s}_ifaces"
		if [ "$type" != "$mr17s_drvname" ]; then
			continue
		fi
		serial_ifaces="$serial_ifaces $ifaces"
	done
}
get_dialin_ifaces() {
	dialin_ifaces=""
	get_serial_ifaces
	for i in $serial_ifaces; do
		tmp=`kdb get sys_dialin_${i}_enable`
		if [ "$tmp" = "1" ]; then
			dialin_ifaces="$dialin_ifaces $i"
		fi
	done
}
get_non_dialin_ifaces() {
	non_dialin_ifaces=""
	get_serial_ifaces
	for i in $serial_ifaces; do
		tmp=`kdb get sys_dialin_${i}_enable`
		if [ "$tmp" = "0" ]; then
			non_dialin_ifaces="$non_dialin_ifaces $i"
		fi
	done
}
