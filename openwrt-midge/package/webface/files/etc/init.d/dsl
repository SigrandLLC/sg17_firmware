#!/bin/sh

kdb="kdb"
ifcfg="/sbin/ifconfig"

. /etc/templates/oem-vars
. /etc/templates/sigrand-lib
# checks that DSL service is enabled

# Device configurations
_dsl_mr17ifdefcfg(){
	local slot=$1
	local dev=$2
	kdb rm sls sys_pcicfg_s${slot}_${dev}*
	kdb set sys_pcicfg_s${slot}_${dev}_mode="slave"
	kdb set sys_pcicfg_s${slot}_${dev}_clkmode="plesio"
	kdb set sys_pcicfg_s${slot}_${dev}_rate="768"
	kdb set sys_pcicfg_s${slot}_${dev}_coding="tcpam32"
	kdb set sys_pcicfg_s${slot}_${dev}_annex="A"
	kdb set sys_pcicfg_s${slot}_${dev}_fill="fill_ff"	
	kdb set sys_pcicfg_s${slot}_${dev}_inv="normal"
	kdb set sys_pcicfg_s${slot}_${dev}_pwron="pwroff"
}

_dsl_mr17defcfg(){
	local slot=$1
	local ifnum=`kdb get sys_pcitbl_s${slot}_ifnum`
	local iftype=`kdb get sys_pcitbl_s${slot}_iftype`
	local i=0

	kdb set sys_pcicfg_s${slot}_ifnum="$ifnum"
	while [ $i -lt $ifnum ]; do
		_dsl_mr17ifdefcfg $slot $i
		i=`expr $i + 1`
	done	
}

_dsl_mr17ifcfg(){
	local iface=$1
	local slot=$2
	local index=$3

	eval `$kdb -qq sls sys_pcicfg_s${slot}_${ifnum}_`
	# apply configuration
	if [ "$mode" == "slave" ]; then
   		$mr17h_cfg $iface $mode $fill $inv $crc $pwron > /dev/null
	else
    	[ -n "$rate" ] && rate="rate $rate"
   		[ -n "$annex" ] && annex="annex $annex"
    	$mr17h_cfg $iface $mode $rate $code $annex $fill $inv $crc $pwron $clkmode > /dev/null
	fi
}

_dsl_mr17cfg(){
	local slot=$1
	local dev=$2
	local ifaces
	local ifnum=0
	local iface

	type=`kdb get sys_pcicfg_s${slot}_iftype`
	cur_cnt=`kdb get sys_pcitbl_s${slot}_ifnum`
	cfg_cnt=`kdb get sys_pcicfg_s${slot}_ifnum`
	if [ -z "$type" ]; then
		kdb set sys_pcicfg_s${slot}_iftype="$mr17h_drvname"
		_dsl_mr17defcfg $slot
	elif [ "$cur_cnt" -gt "$cfg_cnt" ]; then
		tmp=`expr $cfg_cnt + 1`
echo "Create def configurations for $type: $tmp-"`expr $cur_cnt - 1`
		while [ "$tmp" -lt "$cur_cnt" ]; do
			_dsl_mr17ifdefcfg "$slot" "$tmp"
		done
	fi
	
	ifaces=`kdb get sys_pcitbl_s${slot}_ifaces`
	for iface in $ifaces; do
		if [ -n "$dev" ]; then
			if [ "$dev" -eq "$ifnum" ]; then
				_dsl_mr17ifcfg "$iface" "$slot" "$dev"
				break
			fi
		else
			_dsl_mr17ifcfg "$iface" "$slot" "$ifnum"
		fi
		ifnum=`expr $ifnum + 1`
	done
}

_dsl_mr16ifdefcfg(){
	local slot=$1
	local dev=$2
	kdb rm sls sys_pcicfg_s${slot}_${dev}*
	kdb set sys_pcicfg_s${slot}_${dev}_mode="slave"
	kdb set sys_pcicfg_s${slot}_${dev}_rate="192"
	kdb set sys_pcicfg_s${slot}_${dev}_coding="tcpam8"
	kdb set sys_pcicfg_s${slot}_${dev}_cfg="preact"
	kdb set sys_pcicfg_s${slot}_${dev}_annex="A"
	kdb set sys_pcicfg_s${slot}_${dev}_fill="fill_ff"	
	kdb set sys_pcicfg_s${slot}_${dev}_inv="normal"
}

_dsl_mr16defcfg(){
	local slot=$1
	local ifnum=`kdb get sys_pcitbl_s${slot}_ifnum`
	local iftype=`kdb get sys_pcitbl_s${slot}_iftype`
	local i=0
	kdb set sys_pcicfg_s${slot}_ifnum="$ifnum"
	while [ $i -lt $ifnum ]; do
		_dsl_mr16ifdefcfg $slot $i
		i=`expr $i + 1`
	done
}

_dsl_mr16ifcfg(){
	local iface=$1
	local slot=$2
	local index=$3
	eval `$kdb -q sls sys_pcicfg_s${slot}_${index}_`
	# apply configuration
	$ifcfg $iface down 
	$mr16h_cfg $iface reload
	[ -n "$rate" ] && rate="rate $rate"
	[ -n "$cfg" ] && cfg="cfg $cfg"
	[ -n "$annex" ] && annex="annex $annex"
	$mr16h_cfg $iface $mode $rate $code $cfg $annex $fill $inv $crc 
    enabled=`kdb get sys_iface_${iface}_enabled`
	[ "$enabled" = 1 ] && $ifcfg $iface up
}

_dsl_mr16cfg(){
	local slot=$1
	local dev=$2
	local ifaces
	local ifnum=0
	local iface
	
	type=`kdb get sys_pcicfg_s${slot}_iftype`
	cur_cnt=`kdb get sys_pcitbl_s${slot}_ifnum`
	cfg_cnt=`kdb get sys_pcicfg_s${slot}_ifnum`
	if [ -z "$type" ]; then
		kdb set sys_pcicfg_s${slot}_iftype="$mr16h_drvname"
		_dsl_mr16defcfg $slot
	elif [ "$cur_cnt" -gt "$cfg_cnt" ]; then
		tmp=`expr $cfg_cnt + 1`
echo "Create def configurations for $type: $tmp-"`expr $cur_cnt - 1`
		while [ "$tmp" -lt "$cur_cnt" ]; do
			_dsl_mr16ifdefcfg "$slot" "$tmp"
		done
	fi

	ifaces=`kdb get sys_pcitbl_s${slot}_ifaces`
	for iface in $ifaces; do
		if [ -n "$dev" ]; then
			if [ "$dev" -eq "$ifnum" ]; then
				_dsl_mr16ifcfg "$iface" "$slot" "$ifnum"
				break
			fi
		else
			_dsl_mr16ifcfg "$iface" "$slot" "$ifnum"
		fi
		ifnum=`expr $ifnum + 1`
	done 
}

_dsl_modcfg(){
	local slot=$1
	local dev=$2
	local type=`kdb get sys_pcitbl_s${slot}_iftype`

	case "$type" in
	$mr16h_drvname)
		_dsl_mr16cfg $slot $dev
		;;
	$mr17h_drvname)
		_dsl_mr17cfg $slot $dev
		;;
	esac
}
		
	
_dsl_start(){
	
	#apply defconfig if no configuration
	echo -n "Configuring SHDSL: "
	eval `kdb sls -q sys_pcitbl_`
	for s in $slots; do
		unset type
		eval "type=\$s${s}_iftype"
		if [ "$type" != "$mr17h_drvname" ] && [ "$type" != "$mr16h_drvname" ]; then
			continue
		fi
		
	    _dsl_modcfg $s

		case "$type" in
			$mr16h_drvname)
				echo -n "${iface}(${mr16h_modname}) "
				;;
			$mr17h_drvname)
				echo -n "${iface}(${mr17h_modname}) "
				;;
		esac
	done
	echo
}

_dsl_stop(){

	# stop all interfaces
	for iface in `$kdb get sys_dsl_ifaces`; do
		_dsl_if_stop $iface
	done
	
	# stop driver
	_dsl_stop_drv

	# stop service
	_dsl_stop_svc 
}

case "$1" in
	start) 
		_dsl_start ;;
	stop)
		_dsl_stop ;;
	restart)
	    _dsl_modcfg $2 $3
esac
