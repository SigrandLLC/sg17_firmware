#!/bin/sh


_ifup(){
	local iface=$1
	eval `kdb -qq sls sys_iface_${iface}_`
	[ -z $proto ] && echo "sys_iface_${iface}_proto is not set"
	[ -z $method ] && echo "sys_iface_${iface}_method is not set"

	echo 1 > /proc/sys/net/ipv4/ip_forward
	echo -n "Setting up $iface "
	case $proto in
	bridge|ether|bonding) 
		case $method in
		static)
			opts="$real $ipaddr netmask $netmask"
			[ -n "$broadcast" ] && opts="$opts broadcast $broadcast"
			/sbin/ifconfig $opts
			if [ -n "$gateway" ]; then
				/sbin/route del default 2>/dev/null
				/sbin/route add default gw $gateway 
			fi
			;;
		dynamic)
			eval `kdb -qq ls sys_hostname`
			opts=" -i $real --hostname=$sys_hostname --background -p /var/run/udhcpc.$iface.pid"
			/sbin/udhcpc $opts 
			;;
		esac
	pppoe)
		;;
	pptp)
		;;
	ipsec)
		;;
	esac
	eval `kdb -qq ls sys_ntpclient_`
	if [ "$sys_ntpclient_enabled" = "1" -a -x /usr/sbin/ntpclient ]; then
		/sbin/route -n | grep ^0.0.0.0 >/dev/null && /usr/sbin/ntpclient -c 1 -s -h ${sys_ntpclient_server:-pool.ntp.org}
	fi

	# setup interface options
	[ -n "$opt_accept_redirects" ] && \
		echo "$opt_accept_redirects" >/proc/sys/net/ipv4/conf/$iface/accept_redirects

	[ -n "$opt_forwarding" ] && \
		echo "$opt_forwarding" >/proc/sys/net/ipv4/conf/$iface/forwarding

	[ -n "$opt_proxy_arp" ] && \
		echo "$opt_proxy_arp" >/proc/sys/net/ipv4/conf/$iface/proxy_arp

	[ -n "$opt_rp_filter" ] && \
		echo "$opt_rp_filter" >/proc/sys/net/ipv4/conf/$iface/rp_filter

	echo " done."
}

_ifdown(){
	local iface=$1
	eval `kdb -qq sls sys_iface_${iface}_`
	[ -z $type ] && echo "sys_iface_${iface}_type is not set" && exit 1
	echo -n "Setting down $iface: "
	/sbin/ifconfig $real down
	case $type in
	static)
		;;
	dhcp)
		[ -r "/var/run/udhcpc.$iface.pid" ] && kill `cat /var/run/udhcpc.$iface.pid`
		;;
	pppoe)
		;;
	pptp)
		;;
	ipsec)
		;;
	esac
	echo " done."
}

case "$0" in
	*network)
		# starts all ifaces
		eval `kdb -q ls sys_iface`
		for iface in $sys_ifaces; do
			eval `kdb -qq sls sys_iface_${iface}_`
			[ "$1" = "start" -a "$auto" != "0" ] && _ifup $iface
			[ "$1" = "stop" ] && _ifdown $iface
			if [ "$1" = "restart" ]; then
				_ifdown $iface
				_ifup $iface 
			fi
		done
		;;
	*ifup)
		[ "x$1" = "x-a" ] && /etc/init.d/network start || _ifup $1
		;;
	*ifdown)
		[ "x$1" = "x-a" ] && /etc/init.d/network stop || _ifdown $1
		;;
	esac



