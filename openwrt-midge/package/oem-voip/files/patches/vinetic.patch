diff -ruiN vinetic_pure/2cpe/drv_vinetic_gpio.c vinetic/2cpe/drv_vinetic_gpio.c
--- vinetic_pure/2cpe/drv_vinetic_gpio.c	2009-02-04 21:01:50.000000000 +0600
+++ vinetic/2cpe/drv_vinetic_gpio.c	2009-02-04 21:01:50.000000000 +0600
@@ -801,4 +801,9 @@
 
    return err;
 }
+
+EXPORT_SYMBOL( VINETIC_GpioSet );
+EXPORT_SYMBOL( VINETIC_GpioGet );
+EXPORT_SYMBOL( VINETIC_GpioConfig );
+EXPORT_SYMBOL( VINETIC_GpioReserve );
 /* @} */
diff -ruiN vinetic_pure/2cpe/drv_vinetic_host.c vinetic/2cpe/drv_vinetic_host.c
--- vinetic_pure/2cpe/drv_vinetic_host.c	2009-02-04 21:01:50.000000000 +0600
+++ vinetic/2cpe/drv_vinetic_host.c	2009-02-04 21:03:05.000000000 +0600
@@ -1784,6 +1784,39 @@
 \param
    pDev    - pointer to the device interface
 \param
+   write_val - value to write (if != 0) or to read (if == 0) ( <= 0xFFFF )
+\retval readed_value if it was successible read operation (1 - if fail)
+\retval 0 if it was successible write operation (1 - if fail)
+\remark
+	you shouldn`t try to write 1 and try to read it (you can`t recognize fail)
+*/
+IFX_int32_t 
+VINETIC_Host_AccessTest (VINETIC_DEVICE *pDev, IFX_uint16_t write_val)
+{
+   IFX_uint16_t val =0;
+   IFX_uint8_t offset;
+
+   if (pDev->hostDev.nAccessMode == VIN_ACCESS_SPI)
+      offset = V2CPE_DUPO_REG15;
+   else
+      offset = V2CPE_ADDR;
+
+   if ( !write_val){ /* we should read */
+      REG_READ_PROT (pDev, offset, &val);
+      CHECK_HOST_ERR (pDev, return IFX_ERROR);
+	  return val;
+   } else { /* we should write */
+      REG_WRITE_PROT (pDev, offset, write_val);
+      CHECK_HOST_ERR (pDev, return IFX_ERROR);
+   	  return 0;
+   }
+}
+#if 0
+/**
+   Test the basic access of VINETIC device.
+\param
+   pDev    - pointer to the device interface
+\param
    max_val - maximum test value ( <= 0xFFFF )
 \return
    IFX_SUCCESS or IFX_ERROR
@@ -1835,6 +1868,7 @@
 
    return IFX_SUCCESS;
 }
+#endif 
 
 /**
   Initialize the VINETIC 2CPE Chip
diff -ruiN vinetic_pure/2cpe/Makefile.am vinetic/2cpe/Makefile.am
--- vinetic_pure/2cpe/Makefile.am	2009-02-04 21:01:50.000000000 +0600
+++ vinetic/2cpe/Makefile.am	2009-02-04 21:01:50.000000000 +0600
@@ -218,7 +218,7 @@
 
 # Extra rule for linux-2.6 kernel object
 if KERNEL_2_6
-drv_vinetic_OBJS = "$(subst .c,.o, $(notdir $(drv_vinetic_SOURCES)))"
+drv_vinetic_OBJS = "$(subst .c,.o, $(drv_vinetic_SOURCES))"
 
 drv_vinetic.ko:
 	@echo -e "Making Linux 2.6.x kernel object"
diff -ruiN vinetic_pure/src/common/src/sys_drv_debug.c vinetic/src/common/src/sys_drv_debug.c
--- vinetic_pure/src/common/src/sys_drv_debug.c	2009-02-04 21:01:50.000000000 +0600
+++ vinetic/src/common/src/sys_drv_debug.c	2009-02-04 21:01:50.000000000 +0600
@@ -40,7 +40,7 @@
 #include "sys_drv_ifxos.h"
 #include "sys_drv_debug.h"
 /** maximum allowed allocations */
-#define MAX_MEMALLOC 100
+#define MAX_MEMALLOC 200
 
 /** control structure for debug memory allocation */
 typedef struct
diff -ruiN vinetic_pure/src/drv_vinetic_linux.c vinetic/src/drv_vinetic_linux.c
--- vinetic_pure/src/drv_vinetic_linux.c	2009-02-04 21:01:50.000000000 +0600
+++ vinetic/src/drv_vinetic_linux.c	2009-02-04 21:01:50.000000000 +0600
@@ -1551,6 +1551,7 @@
 module_init(vinetic_module_init);
 module_exit(vinetic_module_exit);
 
+EXPORT_SYMBOL( VINETIC_OpenKernel );
 
 #endif /* LINUX */
 
