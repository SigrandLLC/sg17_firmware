------------------------------------------------------
Сборка проекта как части прошивки или отдельным пакетом
------------------------------------------------------

	Проект можно собрать как часть прошивки или пакет, используя OpenWRT для 
сборки. Для этого нужно включить пакет в сборку, после чего запустить сам
процесс сборки. Для включения проекта в сборку нужно соответствующим образом 
произвести конфигурацию. Для этого из корневого каталога OpenWRT выполнить

$ make menuconfig

В появившемся меню открыть "OpenWrt Package Selection"->"Drivers"->"oem-voip"
и выбрать <*> для включения пакета в прошивку или <m> для сборки его в
качестве пакета. Далее нужно выйти из меню, сохранив изменения. Теперь процесс
сборки можно запустить командой 

$ make

При пересборке проекта, возможно, понадобиться сделать

$ make oem_clean

для удаления старых файлов сборки проекта.

За более подробным описанием процесса сборки в OpenWRT обратитесь к 
соответствующей документации.

	
------------------------------------------------------
Сборка отдельных программных модулей проекта
------------------------------------------------------
	Есть также возможность производить сборку отдельных программных модулей
проекта независимо друг от друга. Для этого нужно перейти в каталог 
<...>/files/src и запустить процесс сборки, управляемый скриптом build.sh. У
этого скрипта есть различные опции:
$1 - модуль для сборки. Это могут быть:
  d   - drv_daa 	- драйвер для работы с FXO-модулями.
  v   - drv_vinetic	- низкоуровневый драйвер для VINETIC-чипов.
  t   - drv_tapi	- высокоуровневый драйвер.
  s   - drv_sgatab	- драйвер для материнской VoIP-платы. 
  svd - svd			- VoIP демон.
  svi - svi			- инициализирующая программа.
  svc - svc			- программа очистки после сбоя svd.
  tst - tst			- набот тестовых программ.

$2 - в случае, если $1 == (d|v|t), то здесь может быть указаны команды для
		создания патчей:
   p1  - подготовка к созданию патча. После запуска скрипта с этим параметром
   распаковывается архив с указанным драйвером (в <...>/files/src/itmp) и на 
   него накладывается уже имеющийся патч. Далее нужно внести в исходные коды
   желаемые изменения, после чего запустить скрипт с тем же первым параметром,
   а на месте второго вараметра указать
   p2  - завершение создания патча. Старый патч сохраняется с постфиксом
   ".old", а на его место в <...>/files/patches/ записывается новый.

	На месте второго аргумента может стоять так же (для s|svd|svi|tst это
	единственный вариант второго аргумента) и
   <path>  - место, куда скинуть полученный бинарник после сборки. 

   !! ВНИМАНИЕ !! 
   Если этот путь не указан, то используется путь жёстко заданный 
   в скрипте. В абсолютном большинстве случаев его необходимо изменить в 
   соответствии с вашим расположением файлов.

