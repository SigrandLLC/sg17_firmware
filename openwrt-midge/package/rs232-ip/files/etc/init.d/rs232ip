#!/bin/sh

kdb="kdb"

PATH=$PATH:/usr/sbin

_start_or_stop() {
	local start=$1
	[ $start -eq 1 ] && echo -n "Starting " || echo -n "Stopping "
	echo "rs232 over ip"
	if [ $start -eq 1 ]; then
		eval `${kdb} sls -q sys_pcitbl_`
		for slot in $slots; do
			_mod_cfg "$slot"
		done
	else
		kill `cat /var/run/socat.*.pid 2>/dev/null` 2>/dev/null
		rm -f /var/run/socat.*.pid
	fi
}

_node_cfg() {
	local slot=$1
	local dev=$2
	local node=$3

	# kdb options
	local enable=0
	local socat_enable=0
	local dst_host
	local dst_port
	local loglevel
	local src_host
	local dst_port

	local lockfile="/var/lock/LCK..$node"
	local pidfile=/var/run/socat.${node}.pid
	eval `${kdb} sls sys_rs232ip_s${slot}_${dev}_`

	# for beginning stop service, always.
	if [ -f $pidfile ]; then
		kill `cat $pidfile`
		rm -f $pidfile
	fi

	if [ "$enable" -eq 1 ]; then # socat must be started
		echo -e "\t${node} on ${src_host}:${src_port}"

		# build log level options
		local str_loglvl=""
		local numlvl=0
		while [ $numlvl -lt $loglevel ]; do
			str_loglvl="${str_loglvl} -d"
			numlvl=`expr $numlvl + 1`
		done

		local socat_options="${str_loglvl} -P ${pidfile} -ly"
		local device_param="file:/dev/${node},raw,echo=0,lockfile=${lockfile}"
		if [ "$connect_enable" -eq 1 ]; then
			echo -e "\tand connect to ${dst_host}:${dst_port}"
			options="${socat_options} ${device_param} TCP:${dst_host}:${dst_port},forever"
		else
			options="${socat_options} TCP-LISTEN:${src_port},keepalive,retry,reuseaddr,bind=${src_host} ${device_param}"
		fi
		socat ${options}
	fi

}

_mod_cfg() {
	local slot=$1
	local dev=$2
	nodes=`kdb get sys_pcitbl_s${slot}_ifaces`
	nodenum=0
	for node in $nodes; do
		if [ -n "$dev" ]; then
			if [ "$dev" -eq "$nodenum" ]; then
				_node_cfg "$slot" "$nodenum" "$node"
				break
			fi
		else
			_node_cfg "$slot" "$nodenum" "$node"
		fi
		nodenum=`expr $nodenum + 1`
	done
}

case "$1" in
	start)
		_start_or_stop 1
		;;
	stop)
		_start_or_stop 0
		;;
	restart)
		_mod_cfg $2 $3
		;;
esac

